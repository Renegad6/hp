#!/bin/sh 
# $Header:$
# gen autoexec patch file

getScriptPath () {
  echo ${0%/*}/
}

source $(getScriptPath)/common.sh;

if [ -z "$AE_SANDBOX_PATH" ]
then
    echo "ae_init_sandbox not performed, impossible to detect risks!!!";
    exit -1;
fi;

ORIG=$MYSBOX;

if [ ! -f "$1"  ];
then
    echo $1 "doesnt exist";
    exit -1;
fi;

PATCH=$(getfile);
echo "#!/bin/sh " >> $PATCH;
cat >> $PATCH << EOF
function apply {

PATCH=\$1

test -f "\$PATCH" 

TDIR=\$(mktemp -d)
trap 'rm -rf \$TDIR' 0

TEMPHUNK=\$TDIR/current_hunk

lsdiff \$1 | while read FNAME
do
    HUNK=1
    while :
    do
        filterdiff --annotate --hunks=\$HUNK -i "\$FNAME" "\$PATCH" > "\$TEMPHUNK"
        HUNK=\$((HUNK+1))
        test -s "\$TEMPHUNK" && \
            {
                patch --forward -p1 -i "\$TEMPHUNK" -d"\$AE_SANDBOX_PATH" --silent --batch
            } || break
    done
done
find \$AE_SANDBOX_PATH \( -path ./*/TARGETS -o -name .svn -o -name work -o -name opkgbuild -o -name 3rdparty \) -prune -o \( -name \*.orig -o -name \*.rej \) -print
}
EOF
echo "cat > /tmp/patch.gz << EOF" >> $PATCH;
gzip -c $1|xxd -p >> $PATCH;
echo "EOF" >> $PATCH;
echo "xxd -p -r /tmp/patch.gz|gzip -dc > /tmp/patch" >> $PATCH;
echo "patch -p0 -i /tmp/patch;" >> $PATCH;
echo "exit 0;" >> $PATCH;

mv $PATCH $1.patch.sh;
chmod +x $1.patch.sh;

exit 0;
